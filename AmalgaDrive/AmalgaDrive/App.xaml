<Application x:Class="AmalgaDrive.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AmalgaDrive"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <FontFamily x:Key="MaterialDesign">resources/#material design icons</FontFamily>
        <FontFamily x:Key="MainFont">Segoe UI Bold</FontFamily>
        <FontFamily x:Key="TextBoxFont">Segoe UI Bold</FontFamily>
        <SolidColorBrush x:Key="BackColor">#305070</SolidColorBrush>
        <SolidColorBrush x:Key="BackColorOpacity30">#30305070</SolidColorBrush>
        <SolidColorBrush x:Key="BackColorOpacity60">#60305070</SolidColorBrush>
        <SolidColorBrush x:Key="AccentColor">Orange</SolidColorBrush>

        <BooleanToVisibilityConverter x:Key="btv" />

        <Style x:Key="Rotator" TargetType="{x:Type TextBlock}">
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform Angle="0" CenterX="8" CenterY="8" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Rotating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="true">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Name="Rotate">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle" From="0" To="360" Duration="0:0:8" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="Rotate" />
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MenuTitle" TargetType="TextBlock">
            <Setter Property="Background" Value="{StaticResource BackColor}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="{StaticResource MainFont}" />
            <Setter Property="FontSize" Value="15" />
        </Style>

        <Style x:Key="FormTextBox" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FormComboBox" TargetType="ComboBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ActionButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource BackColor}" />
            <Setter Property="Foreground" Value="{StaticResource AccentColor}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Height" Value="25" />
            <Setter Property="FontFamily" Value="{StaticResource MainFont}" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="OuterBorder" Background="{StaticResource AccentColor}">
                            <Border x:Name="InnerBorder" Background="{TemplateBinding Background}" Margin="0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault" Value="True">
                                <Setter Property="BorderThickness" Value="2" TargetName="InnerBorder"  />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentColor}" />
                    <Setter Property="Foreground" Value="{StaticResource BackColor}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.4" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BoxButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource BackColor}" />
            <Setter Property="Foreground" Value="{StaticResource AccentColor}" />
            <Setter Property="Width" Value="20" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FontFamily" Value="{StaticResource MaterialDesign}" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Margin" Value="0,0,10,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentColor}" />
                    <Setter Property="Foreground" Value="{StaticResource BackColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- style a top level menu item -->
        <ControlTemplate x:Key="VsMenuTop" TargetType="MenuItem">
            <StackPanel TextBlock.FontSize="15px" Height="35">
                <!-- label, icons, etc. -->
                <Label Content="{TemplateBinding Header}" Margin="5" Foreground="White" />

                <!-- sub items -->
                <Popup IsOpen="{TemplateBinding IsSubmenuOpen}" Placement="RelativePoint" PlacementRectangle="0,35,0,0"  AllowsTransparency="True" Focusable="False">
                    <Border BorderThickness="1" Background="White" BorderBrush="#E0E0E0">
                        <StackPanel IsItemsHost="True" />
                    </Border>
                </Popup>
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver"  Value="True">
                                <Setter Property="Background" Value="#106EBE" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>
        </ControlTemplate>

        <!-- style a non-top level menu item -->
        <ControlTemplate x:Key="VsMenuSub" TargetType="MenuItem">
            <DockPanel TextBlock.FontSize="15px" x:Name="panel">
                <!-- label, icons, etc. -->
                <Label Content="{TemplateBinding Header}" Foreground="Black" Margin="5,0,5,0" />

                <!-- sub items -->
                <Popup IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" Placement="Right" >
                    <Border BorderThickness="1" Background="White" BorderBrush="#E0E0E0">
                        <StackPanel IsItemsHost="True" />
                    </Border>
                </Popup>
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="panel" Value="#EFF6FC" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- style the separator -->
        <ControlTemplate x:Key="VsMenuSep" TargetType="Separator">
            <Border Height="1" Background="#E0E0E0" />
        </ControlTemplate>

        <!-- some base stuff -->
        <Style TargetType="Menu">
            <Setter Property="Background" Value="{StaticResource BackColor}" />
            <Setter Property="Height" Value="40px" />
        </Style>

    </Application.Resources>
</Application>
